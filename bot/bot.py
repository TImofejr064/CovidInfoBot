# -*- coding: utf-8 -*-
import telebot
import config
from telebot import types
from covid_parser import *
from newsapi import NewsApiClient

bot = telebot.TeleBot(config.token)

totalCasesKeyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
totalCasesBtn1 = types.KeyboardButton(text="‚ÑπÔ∏è–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
totalCasesBtn2 = types.KeyboardButton(text="üá®üá≥–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∞–º")
totalCasesBtn3 = types.KeyboardButton(text="üì∞–ù–æ–≤–æ—Å—Ç–∏ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–∞")
totalCasesKeyboard.add(totalCasesBtn1, totalCasesBtn2, totalCasesBtn3)

@bot.message_handler(commands=["start"])
def start(message):
    bot.send_message(message.chat.id, "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç —Å –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ covid 19", reply_markup=totalCasesKeyboard)


@bot.message_handler(content_types=["text"])
def text(message):
    if message.text == "–ú–µ–Ω—é":
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ ", reply_markup=totalCasesKeyboard)
        bot.register_next_step_handler(message, text)
    elif message.text == "‚ÑπÔ∏è–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
        cases = getCases()
        deaths = getDeaths()
        recovered = getRecovered()
        mes = f"<b>–ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É</b> \nü§ß–ó–∞—Ä–∞–∂–µ–Ω–Ω—ã—Ö : <i>{ cases }</i> \n‚ò†Ô∏è–°–º–µ—Ä—Ç–µ–π : <i>{ deaths }</i>\nüòÄ–í—ã–∑–¥–æ—Ä–æ–≤–∏–≤—à–∏—Ö : <i>{ recovered }</i>"
        bot.send_message(message.chat.id, text=mes, parse_mode = "HTML")
    elif message.text == "üì∞–ù–æ–≤–æ—Å—Ç–∏ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–∞":
        getNews(message, 1)
    elif message.text == "üá®üá≥–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∞–º":
        source = requests.get("https://www.worldometers.info/coronavirus/").text
        soup = BeautifulSoup(source, "lxml")
        cases = soup.find_all("div", class_="maincounter-number")
        table = soup.find("table", id="main_table_countries_today").tbody
        trs = table.find_all("tr")
        countries = []
        CountryChooseKeyboard = types.ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
        CountryChooseButton = types.KeyboardButton(text="‚óÄÔ∏è–ù–∞–∑–∞–¥")
        CountryChooseKeyboard.add(CountryChooseButton)
        j = 8
        while j < 218:
            country = trs[j]
            tds = country.find_all("td")
            country_name = tds[0].string
            CountryChooseButton1 = types.KeyboardButton(text=str(country_name))
            countries.append(str(country_name))

            country = trs[j+1]
            tds = country.find_all("td")
            country_name = tds[0].string
            CountryChooseButton2 = types.KeyboardButton(text=str(country_name))
            countries.append(str(country_name))

            country = trs[j+2]
            tds = country.find_all("td")
            country_name = tds[0].string
            CountryChooseButton3 = types.KeyboardButton(text=str(country_name))
            countries.append(str(country_name))

            CountryChooseKeyboard.add(CountryChooseButton1, CountryChooseButton2, CountryChooseButton3)

            j += 3
            

        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É", reply_markup=CountryChooseKeyboard)
        bot.register_next_step_handler(message, getInfoByCountry,CountryChooseKeyboard, countries)

def getInfoByCountry(message, keyboard, countries):
    if message.text == "‚óÄÔ∏è–ù–∞–∑–∞–¥":
        message.text = "–ú–µ–Ω—é"
        text(message)
    elif message.text not in countries:
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –∏–∑ –ø–∞–Ω–µ–ª–∏ —Å –Ω–∏–∑—É")
        message.text = "üá®üá≥–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∞–º"
        text(message)
    else:
        source = requests.get("https://www.worldometers.info/coronavirus/").text
        soup = BeautifulSoup(source, "lxml")
        cases = soup.find_all("div", class_="maincounter-number")
        table = soup.find("table", id="main_table_countries_today").tbody
        trs = table.find_all("tr")
        j = 8
        while j < 218:
            country = trs[j]
            tds = country.find_all("td")
            country_name = tds[0].string
            if country_name == message.text:
                total_cases = tds[1].string
                new_cases = tds[2].string
                total_deaths = tds[3].string
                new_deaths = tds[4].string
                total_recovered = tds[5].string
                active_cases = tds[6].string
                critical = tds[7].string
                cases1m = tds[8].string
                deaths1m = tds[9].string
                total_tests = tds[10].string
                tests1m = tds[11].string
                mes = f"<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω—ã {country_name}</b> \n–ó–∞—Ä–∞–∂–µ–Ω–Ω—ã—Ö: <i>{total_cases}</i> \n–ó–∞—Ä–∞–∂–µ–Ω–Ω—ã—Ö –∑–∞ –¥–µ–Ω—å: <i>{new_cases}</i> \n–°–º–µ—Ä—Ç–µ–π: <i>{total_deaths}</i> \n–°–º–µ—Ä—Ç–µ–π –∑–∞ –¥–µ–Ω—å: <i>{new_deaths}</i> \n–í—ã–∑–¥–æ—Ä–æ–≤–∏–≤—à–∏—Ö: <i>{total_recovered}</i> \n–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–ª—É—á–∞–∏: <i>{active_cases}</i> \n–ö—Ä–∏—Ç–∏—á–Ω—ã–µ: <i>{critical}</i> \n–ó–∞—Ä–∞–∂–µ–Ω–Ω—ã—Ö –Ω–∞ 1 –º–ª–Ω: <i>{cases1m}</i> \n–°–º–µ—Ä—Ç–µ–π –Ω–∞ 1 –º–ª–Ω: <i>{deaths1m}</i> \n–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: <i>{total_tests}</i> \n–¢–µ—Å—Ç–æ–≤ –Ω–∞ 1 –º–ª–Ω: <i>{tests1m}</i>"
                bot.send_message(message.chat.id, mes, parse_mode="HTML", reply_markup=keyboard)
                bot.register_next_step_handler(message, getInfoByCountry, keyboard, countries)
                break
            else:
                j += 1

def getNews(message, page):
    news = NewsApiClient(api_key='990b728f8ea245bfbc63329adfd21522')
    top_headlines = news.get_top_headlines(q='–∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å', language='ru', page_size=1, page=page)
    
    for i in top_headlines["articles"]:
        title = i["title"]
        desc = i["description"]
        url = i["url"]
        urlToImage = i['urlToImage']
        publishedAt = i["publishedAt"][0:10]

        mes = f"<b>{title}</b> \n{desc} \n{urlToImage} \n–ò—Å—Ç–æ—á–Ω–∫: {url} \n–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {publishedAt}"
        getNewsKeyboard = types.InlineKeyboardMarkup()
        getNewsKeyButton1 = types.InlineKeyboardButton(text="–ü—Ä–µ–¥", callback_data=f"n{page-1}")
        getNewsKeyButton2 = types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data=f"–û—Ç–º–µ–Ω–∞")
        getNewsKeyButton3 = types.InlineKeyboardButton(text="–°–ª–µ–¥", callback_data=f"n{page+1}")

        if page > 1:
            getNewsKeyboard.add(getNewsKeyButton1, getNewsKeyButton2, getNewsKeyButton3)
        elif page == 1:
            getNewsKeyboard.add(getNewsKeyButton2, getNewsKeyButton3)
        
        if page > 1:
            bot.edit_message_text(chat_id = message.chat.id, message_id = message.message_id,text= mes, parse_mode="HTML", reply_markup=getNewsKeyboard)
        elif page == 1:
            bot.send_message(message.chat.id, mes, parse_mode="HTML", reply_markup=getNewsKeyboard)
        
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.data[0:1] == "n":
        getNews(message = call.message, page = int(call.data[1::]))
    elif call.data == "–û—Ç–º–µ–Ω–∞":
        call.message.text = "–ú–µ–Ω—é"
        m = call.message
        bot.delete_message(call.message.chat.id, call.message.message_id)
        text(m)
if __name__ == '__main__':
    bot.polling(none_stop=True)